services:
  postgres:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: postgres_db
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./init/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    ports:
      - "5432:5432"
  
  
  api:
    build: ./api
    container_name: ess-api
    restart: always
    env_file: .env
    volumes:
      - ./api:/app
      - ./log_config.yaml:/app/log_config.yaml:ro
    working_dir: /app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --log-config /app/log_config.yaml
    depends_on:
      postgres:
        condition: service_healthy
      pgbouncer:
        condition: service_started
    ports:
      - "8000:8000"

  ingestor:
    build: ./ingestor
    depends_on:
      postgres:
        condition: service_healthy
      emqx:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./ingestor:/app
    working_dir: /app
    command: python main.py
    restart: on-failure
    deploy:
      replicas: 2

  emqx:
    image: emqx/emqx:5.6.1
    container_name: emqx
    restart: always
    ports:
      - "${EMQX_MQTT_TCP_PORT}:1883"
      - "${EMQX_WS_PORT}:8083"
      - "${EMQX_DASHBOARD_PORT}:18083"
    environment:
      - EMQX_NAME=emqx
      - EMQX_ALLOW_ANONYMOUS=true
    healthcheck:
      test: ["CMD", "emqx_ctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  pgbouncer:
    image: edoburu/pgbouncer
    container_name: pgbouncer
    restart: always
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=2000
      - DEFAULT_POOL_SIZE=50
      - LISTEN_PORT=6432
    ports:
      - "6432:6432"

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin4
    restart: always
    env_file: .env
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro

volumes:
  pg_data:
  pgadmin_data:


