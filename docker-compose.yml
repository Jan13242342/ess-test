services:
  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file: .env
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
  

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin4
    restart: always
    env_file: .env
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro

  emqx:
    image: emqx/emqx:5.6.1
    container_name: emqx
    restart: always
    ports:
      - "${EMQX_MQTT_TCP_PORT}:1883"
      - "${EMQX_WS_PORT}:8083"
      - "${EMQX_DASHBOARD_PORT}:18083"
    environment:
      - EMQX_NAME=emqx
      - EMQX_ALLOW_ANONYMOUS=true
    healthcheck:
      test: ["CMD", "emqx_ctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 10

  ingestor:
    build: ./ingestor
    container_name: ingestor
    depends_on:
      postgres:
        condition: service_healthy
      emqx:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./ingestor:/app
    working_dir: /app
    command: python main.py
    restart: on-failure

volumes:
  pg_data:
  pgadmin_data:
